library lib_CANS()
 function Allow_Assesment(clientid,assessments[]) is null
  clientid        is x
  c.cans.rec      is h
  c.cans.staff    is x
  c.cans.ver      is x
  c.cans.date     is d
  c.cans.age      is i
  c.cans.aloc     is x
  c.cans.rloc     is x
  c.cans.dloc     is x
  c.cans.compd    is d
  c.cans.type     is x
  c.cans.alocdate is d  
  rc              is i 
  assessments[]   is x
  $clear(assessments[])
  $allowupdate(assessments[])
  Last_Assessment(clientid,c.cans.type,c.cans.staff,c.cans.ver,c.cans.date,c.cans.age,c.cans.aloc,c.cans.rloc,c.cans.dloc,c.cans.compd,c.cans.alocdate)
  select c.cans.type
   case !dp  (void)$arrpush(assessments[],"1")
             (void)$arrpush(assessments[],"11")
   case "1"  (void)$arrpush(assessments[],"2")
             (void)$arrpush(assessments[],"3")
   case "2"  (void)$arrpush(assessments[],"3")
   case "3"  (void)$arrpush(assessments[],"1")
             (void)$arrpush(assessments[],"11")   
   case "11" (void)$arrpush(assessments[],"1")
             (void)$arrpush(assessments[],"11")   
   case "12" (void)$arrpush(assessments[],"1")
             (void)$arrpush(assessments[],"11")   
  endselect 
 end Allow_Assesment

 function Last_Assessment(clientid,c.cans.type,c.cans.staff,c.cans.ver,c.cans.date,c.cans.age,c.cans.aloc,c.cans.rloc,c.cans.dloc,c.cans.compd,c.cans.alocdate) is null
  clientid        is x
  c.cans.rec      is h
  c.cans.staff    is x
  c.cans.ver      is x
  c.cans.date     is d
  c.cans.age      is i
  c.cans.aloc     is x
  c.cans.rloc     is x
  c.cans.dloc     is x
  c.cans.compd    is d
  c.cans.type     is x
  c.cans.alocdate is d  
  rc              is i 
  $allowupdate(c.cans.type,c.cans.staff,c.cans.ver,c.cans.date,c.cans.age,c.cans.aloc,c.cans.rloc,c.cans.dloc,c.cans.compd) 
  do until c.cans.compd dp or rc = 2
   rc = $dbreadnextdst(02,clientid,c.cans.rec,c.cans.type,c.cans.staff,c.cans.ver,c.cans.date,c.cans.age,c.cans.aloc,c.cans.rloc,c.cans.dloc,c.cans.compd,c.cans.alocdate)
  enddo
 end Last_Assessment
 
 function EndDate(c.cans.aloc,c.cans.alocdate) is d
  c.cans.aloc     is x
  c.cans.alocdate is d
  select c.cans.aloc
   case "100" EndDate = c.cans.alocdate + 7
   case "101" EndDate = c.cans.alocdate + 90
   case "102" EndDate = c.cans.alocdate + 90
   case "103" EndDate = c.cans.alocdate + 90
   case "104" EndDate = c.cans.alocdate + 90
   case "105" EndDate = c.cans.alocdate + 90
   case "106" EndDate = c.cans.alocdate + 90
   case "107" EndDate = c.cans.alocdate + 7
   case other EndDate = c.cans.alocdate
  endselect 
 end EndDate
 
 function PromptNewEditDel(clientid) is i
  clientid        is x
  c.cans.rec      is h
  c.cans.staff    is x
  c.cans.ver      is x
  c.cans.date     is d
  c.cans.age      is i
  c.cans.aloc     is x
  c.cans.rloc     is x
  c.cans.dloc     is x
  c.cans.compd    is d
  c.cans.type     is x
  c.cans.alocdate is d
  rc              is i
  choice_btn[]    is x
  rc = $dbread(02,clientid,c.cans.rec,c.cans.type,c.cans.staff,c.cans.date,c.cans.rloc,c.cans.compd)
  if c.cans.staff = $operstaffid and c.cans.compd !dp
   do while 1 = 1
    $clear(choice_btn[])
    $submitopt("off")
    $cancelopt("off","Exit")
    $form($funcname)
     {"lib_COMMON"}ClientPageHeader($regid,"Y")
	 $tag("<center>")
	  $br(3)$text("There is a current CANS assessment that has not yet been authorized. How do you wish to proceed?","datatag")
	  $br(2)$submit(choice_btn[1],"Restart Current")
	  $br(2) $submit(choice_btn[2],"Edit Existing")
	  $br(2) $submit(choice_btn[3],"Delete Existing and Exit")
	  $br(2) $submit(choice_btn[4],"Exit with no changes")
	 $tag("</center>")
    $sendform($funcname)
    select $endbutton
     case "SUBMIT" 
	 case "CANCEL" PromptNewEditDel = 4
	               return
	 case other PromptNewEditDel = $maxarray(choice_btn[])
	            return
    endselect    
   enddo
  elseif c.cans.staff dp and c.cans.staff != $operstaffid and c.cans.compd !dp
   PromptNewEditDel = 5
  endif
 end PromptNewEditDel
