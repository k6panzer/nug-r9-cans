' FreeTDS Library
'
' * REQUIRES the "SQSH" command-line tool.
' http://sqsh.sf.net/
' http://www.freetds.org/
'
' DSN format: "user:pass:host:db"
'
' $Id$
'
' {{{ HEADER
' Programmer: R.EDEKER
' Date      : 2005-10-20
' Purpose   : self-contained library for the FreeTDS driver used to
'             query external MS-SQL/Sybase DB's within uScript
' TCF       :
' PARM      :
'
' {{{ REVISIONS
' STAFF        DATE        UPDATE
' R.EDEKER     20070301    + added function q_by_file
'                            used to execute an existing unix file
'                            containing queries.  Currently used
'                            to load large amounts of data.
' R.EDEKER     20070305    + added version var and function
'                          - removed unnecessary code left over from
'                            the sqlite lib
' R.EDEKER     20090917    + v0.3 added quote_field() function to handle
'                            literal single quotes
'
' RLE          20090918    + .31 added useDSN() function
'                          
' TJM          20120718    ~ moved temp file (sqlfile) that contains query string to library global
'                            for more efficiant tempfile use when library gets multiple calls by same script
'                          + added unload routine of clearing temp file 
' }}}
' }}}


%global __dsn, __exec
%global __user, __pass, __host, __db, __version
%global sqlfile

LIBRARY LIB-freetds()
   __dsn    is x
   __exec   is x

   __user   is x
   __pass   is x
   __host   is x
   __db     is x
   
   __version   is n
   sqlfile  is x

ON LOAD DO:
   __version = 0.31
   __exec   = "/c0/dwsql/bin/sqsh"

   'if $checkfile(__exec) > 0 then
   '   $brmsg("
return

on unload do:
   $cleartempfile(sqlfile)
return

dynamic FUNCTION version() is n
   version = __version
end version


dynamic FUNCTION setDSN(dsn) is null
   dsn      is x

   if dsn DP then
      __dsn = dsn
      _parseDSN()
   endif
end setDSN


dynamic FUNCTION _parseDSN() is null
   T     is x
   tmp[] is x
   if __dsn dp then
      __dsn = $replace(x"22","",__dsn)
      $parsem(__dsn,1,":",tmp[])
      __user = tmp[1]
      __pass = tmp[2]
      __host = tmp[3]
      __db   = tmp[4]
   endif
end _parseDSN


dynamic FUNCTION getDSN() is x
   getDSN = __dsn
end getDSN


dynamic FUNCTION setExec(str) is null
   str      is x

   if str DP then
      __exec = str
   endif
end setExec



dynamic FUNCTION q(sql, ret[]) is b
   q = 0
   sql      is x
   ret[]    is x
   $allowupdate(ret[])

   T        is x
   rc       is b
   cmd      is x
'   sqlfile  is x

   if __dsn DP and sql DP then
      sql = $replace(x"0d"," ",sql)

      if $find(";", sql) = 0 then
         sql += ";"
      endif

      sql += x"0a" + "\go" + x"0a"
      if sqlfile !dp then
         rc = $tempfile(sqlfile)
      endif
      if rc > 0 then $errmsg1 = $format(rc,"tempfile=99"), $abort(1,) endif
      rc = $putfile(sql,sqlfile)
      if rc > 0 then $errmsg1 = $format(rc,"putfile=99"), $abort(1,) endif

      cmd = "echo " + __pass + " | "
         + __exec
         + " -S " + __host
         + " -U " + __user
         + " -P -"
         + " -i " + sqlfile
         + " -D " + __db
         + " -m bcp"


      '$brmsg(cmd,1,"W")
      rc = $unix(cmd,ret[])
      if rc > 0 then
         $returnerr = ret[1]
         q = rc
         return
      endif

      q = rc
   endif

end q

' query by file
dynamic FUNCTION q_by_file(file) is b
   q_by_file = 0
   
   file     is x
   cmd      is x
   rc       is b
   
   if __dsn DP and $checkfile(file) = 0 then
      cmd = "echo " + __pass + " | "
         + __exec
         + " -S " + __host
         + " -U " + __user
         + " -P -"
         + " -i " + file
         + " -D " + __db
         + " -m bcp"


      rc = $unix(cmd)
      q_by_file = rc
   else
      q_by_file = 99
   endif

end q_by_file

'quote_field
'examine string and escape quotes
dynamic FUNCTION quote_field(str,sql_type) is x
   str      is x
   sql_type is x
   
   '$allowupdate(quote_field)
   
   qt       is x
   qt = x"27"
   
   if sql_type !dp then sql_type = "MS" endif
   sql_type = $uc(sql_type)
   
   
   quote_field = str
   
   if $find(qt,str) > 0 then
      select sql_type
         case "MS"      'Microsoft SQL
            quote_field = $replace(qt,`qt + qt`,quote_field)
         case "MY"      'MySQL
            quote_field = $replace(qt,`"\" + qt`,quote_field)
         case "SL"      'SQLite
            quote_field = $replace(qt,`qt + qt`,quote_field)
         case other     'do nothing
            quote_field = str
      endselect
   endif
end quote_field


' use a data source from a file instead of hard-coding this
' in a script
'
' ds_name - data source name or full path
dynamic FUNCTION useDSN(ds_name) is b
   ds_name        is x
   ds_file        is x
   ds_path        is x
   
   rc             is b
   i              is i
   buf[]          is x
   rec[]          is x
   
   if ds_name !dp then
      useDSN = 1
      return
   endif

   if $seg(ds_name,1,1) = "/" then
      '* literal file/path
      ds_file = ds_name
   else
      ds_path = $sysname + "/SCRIPT/D/freetds/"
      ds_file = ds_path + ds_name + ".ds"
   endif
   
   rc = $getfile(buf[],ds_file)
   if rc > 0 then
      useDSN = 10 + rc
      return
   endif
   
   i = 0
   do while i++ < $maxarray(buf[])
      $parsem(buf[i],1,"|",rec[])
      if rec[1] = "DS" then
         setDSN(rec[2])
         return
      endif
   enddo
   
end useDSN
